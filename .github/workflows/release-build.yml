name: "Release Build"

on:
  push:
    tags:
      - "v*.*.*.*"

env:
  RELEASE_NAME: ${{ github.ref_name }}
  ARTIFACT_NAME: cncnet5_${{ github.ref_name }}.zip

  SOLUTION_PATH: .
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        uses: ./.github/actions/build
        with:
          sln-path: ${{ env.SOLUTION_PATH }}
          build-config: ${{ env.BUILD_CONFIGURATION }}
          artifact-name: compiled-dll-regular-${{ github.sha }}

      - name: Build HardEnd
        uses: ./.github/actions/build
        with:
          sln-path: ${{ env.SOLUTION_PATH }}
          build-config: ${{ env.BUILD_CONFIGURATION }}-HardEnd
          artifact-name: compiled-dll-hardend-${{ github.sha }}

      - name: Create Archive For Release
        run: |
          mkdir ./artifact
          mkdir ./artifact/Regular
          copy ./LICENSE.md ./artifact/Regular/LICENSE.md
          copy ./README.md ./artifact/Regular/README.md
          copy ./${{ env.BUILD_CONFIGURATION }}/cncnet5.pdb ./artifact/Regular/cncnet5.pdb
          copy ./${{ env.BUILD_CONFIGURATION }}/cncnet5.dll ./artifact/Regular/cncnet5.dll
          mkdir ./artifact/HardEnd
          copy ./LICENSE.md ./artifact/HardEnd/LICENSE.md
          copy ./README.md ./artifact/HardEnd/README.md
          copy "./${{ env.BUILD_CONFIGURATION }}-HardEnd/cncnet5.pdb" ./artifact/HardEnd/cncnet5.pdb
          copy "./${{ env.BUILD_CONFIGURATION }}-HardEnd/cncnet5.dll" ./artifact/HardEnd/cncnet5.dll
          7z a ${{ env.ARTIFACT_NAME }} ./artifact/*

      - name: Upload New Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_NAME }}
          append_body: true
          draft: true
          files: |
            ${{ env.ARTIFACT_NAME }}

  request-anti-cheat-build:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Request AntiCheat Build
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/cncnet/yrpp-spawner-private/actions/workflows/release-build-by-request.yml/dispatches \
          -d '{"ref":"main", "inputs":{"tag": "${{ github.ref_name }}"}}'
